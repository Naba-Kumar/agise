{{>adminhead}}
<div class="wrapper">
    {{>sidebar}}
    <div class="main">
        <nav class="navbar navbar-expand px-3 border-bottom">
            <button class="btn" id="sidebar-toggle" type="button">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse navbar">
                <div class="">
                    <h4 class="mt-2">Admin Dashboard</h4>
                </div>
            </div>
        </nav>
        <main class="content px-3 py-2">
            <div class="input-group mb-3">
                <input type="search" class="form-control " placeholder="Search" aria-label="Search"
                    aria-describedby="search-addon" />
                <button type="button" class="btn btn-outline-primary" data-mdb-ripple-init>search</button>
            </div>

            <div class="card border-0">
                <div class="card-header">
                    <h5 class="card-title">
                        Basic Table
                    </h5>
                    <h6 class="card-subtitle text-muted">
                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ducimus,
                        necessitatibus reprehenderit itaque!
                    </h6>
                </div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">id</th>
                                <th scope="col">Title</th>
                                <th scope="col">File Name</th>
                                <th scope="col">Workspace</th>
                                <th scope="col">Store</th>
                                <th scope="col">status</th>
                                <th scope="col">Delete</th>

                            </tr>
                        </thead>
                        <tbody>

                            {{#each dataItems}}
                            <tr>
                                <th scope="row">1</th>
                                <td>{{this.title}}</td>
                                <td>{{this.file_name}}</td>
                                <td>{{this.workspace}}</td>
                                <td>{{this.store}}</td>
                                <td>{{this.visibility}}</td>
                                <td>
                                    <input type="button" class="btn btn-danger" value="delete" file-name="{{this.file_name}}" file-workspace="{{this.workspace}}" file-store="{{this.store}}">
                                    {{!-- <button class="btn" file-name="{{this.file_name}}" file-workspace="{{this.workspace}}" file-store="{{this.store}}">
                                        <span class="material-symbols-outlined">delete</span>
                                    </button> --}}

                                </td>
                            </tr>
                            {{/each}}

                        </tbody>

                    </table>
                </div>
            </div>
            <div class="container-fluid">


                <!-- Table Element -->


            </div>
        </main>


    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
    const actionButtons = document.querySelectorAll('.btn');

    actionButtons.forEach(button => {
        button.addEventListener('click', async (event) => {
            const file_name = event.target.getAttribute('file-name');
            const workspace = event.target.getAttribute('file-workspace');
            const store = event.target.getAttribute('file-store');
            const token = localStorage.getItem('token'); // Retrieve the token from localStorage


            try {
                const response = await fetch('/admin/delete', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}` // Include the token in the header
                    },
                    body: JSON.stringify({ file_name, workspace, store }),
                    credentials: 'include' // Ensure cookies or other credentials are sent
                }).then(response => response.json())
                  .then(data => {
                      console.log('Response data:', data);
                      if (data) {
                          console.log(data.message);
                          Swal.fire({
                              title: data.title,
                              text: data.message,
                              confirmButtonText: "OK",
                              icon: data.icon
                          }).then((result) => {
                              if (result.isConfirmed) {
                                  window.location.reload();
                              }
                          });
                      } else {
                          console.error('Unexpected response format:', data);
                          Swal.fire({
                              title: 'Error',
                              text: 'Unexpected response format.',
                              icon: 'error'
                          });
                      }
                  });

            } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
                Swal.fire({
                    title: 'Error!',
                    text: `There was a problem performing the action.`,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    });
});

</script>
{{>footer}}